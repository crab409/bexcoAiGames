<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>스무고개</title>
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/game.css" rel="stylesheet">
  </head>
  <body>
    <div id="bg-overlay"></div>
    <div id="chat-app">
      <div class="chat-header">
        <div class="header-title">
          <span>🎲 스무고개 AI 게임</span>
          <button class="desc-toggle" aria-expanded="true" aria-controls="game-desc-content">게임 설명 보기 ▼</button>
        </div>
        <button id="mode-toggle">🌙 다크 모드</button>
      </div>
      <div class="game-desc show" id="game-desc-content">
        <span>AI가 생각한 단어를 20번 이내에 질문으로 맞혀보세요!<br>
        예) "동물인가요?", "먹을 수 있나요?" 등으로 질문해보세요.</span>
      </div>
      <div class="chat-container" id="chat-container"></div>
      <div class="input-area">
        <textarea id="message-input" placeholder="질문을 입력하세요..." rows="1"></textarea>
        <button id="send-button">▶</button>
      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>
    <script>
      // 아코디언(접기/펼치기) 기능
      document.addEventListener('DOMContentLoaded', () => {
        const descToggle = document.querySelector('.desc-toggle');
        const descContent = document.getElementById('game-desc-content');
        descToggle.addEventListener('click', () => {
          const isOpen = descContent.classList.toggle('show');
          descToggle.setAttribute('aria-expanded', isOpen);
          descToggle.textContent = isOpen ? '게임 설명 접기 ▲' : '게임 설명 보기 ▼';
        });
      });

      const start = window.performance.now(); // 측정 시작 
      const socket = io();
      let keyword = "<%= key %>";
      let room;
      let answer;
      let metaData;
      let cnt = 0;

      // 유저가 페이지에 접속하면 방에 참여
      socket.emit("joinRoom", {
        keyword: "<%= key %>",
      });

      // 방에 참여 된 후, 서버로부터 게임을 진행하기 위한 데이터를 받음
      socket.on("gameSetUp", (data) => {
        answer = data.answer;
        metaData = data.metaData;
        room = data.room;
      })



      // 메세지 전송시 
      document.querySelector("#send-button").addEventListener("click", function() {
        let inp = document.querySelector("#message-input").value;
        const chatContainer = document.querySelector("#chat-container");


        // 새로운 메시지 추가
        chatContainer.insertAdjacentHTML("beforeend",
          `<div class="chat-box mine"><span>${inp}</span></div>`
        );


        let data = {
          answer: answer,
          metaData: metaData,
          room: room,
          keyword: "<%= key %>",
          cnt: cnt++,
          msg: inp,
        };
        socket.emit("userMsg", data);


        // 채팅 컨테이너 스크롤을 아래로 고정
        chatContainer.scrollTop = chatContainer.scrollHeight;


        // 스무고개 실패시
        if (cnt >= 20) {
          let end = window.performance.now();
          let time = end - start;
          location.replace(`/gameEnd/${time}/${cnt}/0`);
        }
      });



      socket.on("serverMsg", (data) => {
        const chatContainer = document.querySelector("#chat-container");

        // 서버 메시지 추가
        chatContainer.insertAdjacentHTML("beforeend",
          `<div class="chat-box"><span>${data}</span></div>`
        );

        // 채팅 컨테이너 스크롤을 아래로 고정
        chatContainer.scrollTop = chatContainer.scrollHeight;
      });

      socket.on("answer", (data) => {
        if (data == 1) {
          let end = window.performance.now();
          let time = (end - start) / 1000;
          location.replace(`/gameEnd/${time}/${cnt}/1`);
        }
      });
    </script>
    <script src="/javaScript/Script.js"></script>
  </body>
</html>